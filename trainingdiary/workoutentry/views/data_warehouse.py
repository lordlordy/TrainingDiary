from django.shortcuts import render
from workoutentry.data_warehouse import DataWarehouse, DataWarehouseManager
from workoutentry.models import Day, KG, FatPercentage, RestingHeartRate, SDNN, RMSSD

from django.contrib import messages


def data_warehouse_update(request):

    if DataWarehouse.instance().base_table_built:
        last_date = DataWarehouse.instance().max_date()
        days = Day.objects.filter(date__gt=last_date)
        kg = KG.objects.filter(date__gt=last_date)
        fat_percent = FatPercentage.objects.filter(date__gt=last_date)
        resting_hr = RestingHeartRate.objects.filter(date__gt=last_date)
        sdnn = SDNN.objects.filter(date__gt=last_date)
        rmssd = RMSSD.objects.filter(date__gt=last_date)
    else:
        days = Day.objects.all()
        kg = KG.objects.all()
        fat_percent = FatPercentage.objects.all()
        resting_hr = RestingHeartRate.objects.all()
        sdnn = SDNN.objects.all()
        rmssd = RMSSD.objects.all()


    training_diary_dd = {"athleteName": "Steven Lord",
                         "Generated By" : "Django Training Diary",
                         "Included": "Days : kg: fatPercent: restingHR: sdnn: rmssd",
                         "days": [d.data_dictionary() for d in days],
                         "kg": [d.data_dictionary() for d in kg],
                         "fatPercent": [d.data_dictionary() for d in fat_percent],
                         "restingHR": [d.data_dictionary() for d in resting_hr],
                         "restingSDNN": [d.data_dictionary() for d in sdnn],
                         'restingRMSSD': [d.data_dictionary() for d in rmssd]}

    dwm = DataWarehouseManager(training_diary_dd)
    dwm.populate_all(print_progress=True)
    messages.info(request, 'DONE')


    return render(request, 'workoutentry/diary_upload.html')
